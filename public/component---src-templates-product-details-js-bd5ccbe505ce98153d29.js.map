{"version":3,"file":"component---src-templates-product-details-js-bd5ccbe505ce98153d29.js","mappings":"2NAIW,EAAQ,uC,UCGJ,SAASA,EAAT,GAAmC,IAChD,EAD+C,EAARC,KAU9BC,SARPC,EADF,EACEA,SACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,OACAC,EALF,EAKEA,MACAC,EANF,EAMEA,KACAC,EAPF,EAOEA,MACAC,EARF,EAQEA,YAEIC,EAAYJ,EAAMK,MAAM,KAAKC,UAC7BC,EAAWN,EAAKI,MAAM,KAAKC,UAC3BE,EAAmBZ,EAASa,cAAcJ,MAAM,KAAKK,KAAK,KAEhE,OACE,gBAACC,EAAA,EAAD,KACE,uBAAKC,UAAU,aACb,uBAAKA,UDxBW,6CC0Bd,gBAAC,EAAAC,KAAD,CAAMC,GAAG,IAAIF,UAAU,cAAvB,QAGA,wBAAMA,UAAU,gCAAhB,KACA,gBAAC,EAAAC,KAAD,CAAMC,GAAE,IAAMN,EAAoBI,UAAU,cACzChB,GAEH,wBAAMgB,UAAU,gCAAhB,KACA,4BAAOf,IAET,uBAAKe,UD5Be,iDC6BlB,uBAAKA,UD5BW,+CC6Bd,gBAAC,EAAAG,EAAD,CAAab,OAAOc,EAAAA,EAAAA,GAASd,GAAQe,IAAKpB,KAE5C,uBAAKe,UD9BU,8CC+Bb,sBAAIA,UAAU,MAAMf,GACnBO,EAAUc,OAAS,EAClB,uBAAKN,UDpCU,kDCqCb,qCACA,uBAAKA,UDvCD,yCCwCDR,EAAUe,KAAI,SAACnB,EAAOoB,GAAR,OACb,uBAAKC,IAAKD,EAAOR,UD1Cd,4CC2CD,wBAAMA,UAAWU,GAAjB,IAAiCtB,EAAMuB,QACvC,wBAAMX,UDtCV,uCCsCI,KACKL,EAASa,GAAOG,cAO7B,qBAAGX,UDrDW,iDCsDZ,wBAAMA,UAAWU,GAAjB,IAAiClB,EAAU,IAAW,IACtD,wBAAMQ,UAAU,uBAAhB,OAA2CL,EAAS,KAGxD,yBAAIT,GACHC,GACC,oCACU,wBAAMa,UD/DV,yCC+DqCb,KAI9CI,GACC,uBAAKS,UDrEQ,8CCsEX,0CACA,qBAAGA,UAAU,aAAaT","sources":["webpack://gatsby-starter-hello-world/./src/styles/product-details.module.css","webpack://gatsby-starter-hello-world/./src/templates/product-details.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var breadCrumb = \"product-details-module--breadCrumb--03pLp\";\nexport var moreDetails = \"product-details-module--moreDetails--oORAX\";\nexport var origin = \"product-details-module--origin--YFl0f\";\nexport var price = \"product-details-module--price--887pm\";\nexport var priceContainer = \"product-details-module--priceContainer--U15+y\";\nexport var priceUnit = \"product-details-module--priceUnit--OL7Wm\";\nexport var prices = \"product-details-module--prices--nNzp4\";\nexport var pricesContainer = \"product-details-module--pricesContainer--7fG0G\";\nexport var productDetails = \"product-details-module--productDetails--EenC+\";\nexport var productImage = \"product-details-module--productImage--Zzlnr\";\nexport var textDetails = \"product-details-module--textDetails--hc4jv\";\nexport var unit = \"product-details-module--unit--dmZGn\";","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { getImage, GatsbyImage } from \"gatsby-plugin-image\"\n\nimport * as styles from \"../styles/product-details.module.css\"\nimport Layout from \"../components/Layout\"\n\nexport default function ProductDetails({ data }) {\n  const {\n    category,\n    name,\n    description,\n    origin,\n    price,\n    unit,\n    image,\n    ingredients,\n  } = data.dataJson\n  const priceList = price.split(\",\").reverse()\n  const unitList = unit.split(\",\").reverse()\n  const breadCrumbLinkTo = category.toLowerCase().split(\" \").join(\"-\")\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <div className={styles.breadCrumb}>\n          {/* bread crumb */}\n          <Link to=\"/\" className=\"color-gray\">\n            Home\n          </Link>\n          <span className=\"color-gray mr-small ml-small\">&gt;</span>\n          <Link to={`/${breadCrumbLinkTo}`} className=\"color-gray\">\n            {category}\n          </Link>\n          <span className=\"color-gray mr-small ml-small\">&gt;</span>\n          <span>{name}</span>\n        </div>\n        <div className={styles.productDetails}>\n          <div className={styles.productImage}>\n            <GatsbyImage image={getImage(image)} alt={name} />\n          </div>\n          <div className={styles.textDetails}>\n            <h2 className=\"h2\">{name}</h2>\n            {priceList.length > 1 ? (\n              <div className={styles.pricesContainer}>\n                <h3>Prices:</h3>\n                <div className={styles.prices}>\n                  {priceList.map((price, index) => (\n                    <div key={index} className={styles.priceUnit}>\n                      <span className={styles.price}>${price.trim()}</span>\n                      <span className={styles.unit}>\n                        / {unitList[index].trim()}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <p className={styles.priceContainer}>\n                <span className={styles.price}>${priceList[0]}</span>{\" \"}\n                <span className=\"color-gray ml-small\">per {unitList[0]}</span>\n              </p>\n            )}\n            <p>{description}</p>\n            {origin && (\n              <p>\n                Origin: <span className={styles.origin}>{origin}</span>\n              </p>\n            )}\n          </div>\n          {ingredients && (\n            <div className={styles.moreDetails}>\n              <h3>Ingredients:</h3>\n              <p className=\"mt-medium\">{ingredients}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query Product($slug: String) {\n    dataJson(slug: { eq: $slug }) {\n      category\n      id\n      name\n      description\n      origin\n      price\n      slug\n      unit\n      image {\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n      ingredients\n    }\n  }\n`\n\n/*\n{priceList.length > 1 ? (\n              <div className={styles.pricesContainer}>\n                <h3>Prices:</h3>\n                <div>\n                  {priceList.map(price => (\n                    <span className={styles.price}>${price.trim()}</span>\n                  ))}\n                </div>\n                <div className=\"mt-small\">\n                  {unitList.map(unit => (\n                    <span className=\"color-gray\">{unit.trim()}</span>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <p className={styles.priceContainer}>\n                <span className={styles.price}>${priceList[0]}</span>{\" \"}\n                <span className=\"color-gray\">per {unitList[0]}</span>\n              </p>\n            )}\n*/\n"],"names":["ProductDetails","data","dataJson","category","name","description","origin","price","unit","image","ingredients","priceList","split","reverse","unitList","breadCrumbLinkTo","toLowerCase","join","Layout","className","Link","to","G","getImage","alt","length","map","index","key","styles","trim"],"sourceRoot":""}