{"version":3,"file":"component---src-pages-honey-js-47b9fb28b840ea8df8a3.js","mappings":"8MAIW,EAAQ,+BCWJ,SAASA,EAAQC,GAC9B,IAAQC,EAA8DD,EAA9DC,SAAUC,EAAoDF,EAApDE,KAAMC,EAA8CH,EAA9CG,QAASC,EAAqCJ,EAArCI,OAAQC,EAA6BL,EAA7BK,MAAOC,EAAsBN,EAAtBM,KAAMC,EAAgBP,EAAhBO,MAAOC,EAASR,EAATQ,KACvDC,GAAaC,EAAAA,EAAAA,GAASH,GACtBI,EAAYN,EAAMO,MAAM,KACxBC,EAAWP,EAAKM,MAAM,KAE5B,OACE,gBAAC,KAAD,CAAME,GAAE,IAAMb,EAASc,cAAf,IAAgCP,EAAQQ,UDrBlC,+BCsBZ,uBAAKA,UDhBU,kCCiBb,uBAAKA,UDfU,oCCiBb,gBAAC,EAAAC,EAAD,CAAaC,MAAOT,EAAYU,IAAKjB,KAEvC,uBAAKc,UDpBe,yCCqBlB,qBAAGA,UAAU,cAAcf,GAC3B,uBAAKe,UD5BI,gCC6BP,0BAAKd,GACJC,GAAW,sBAAIiB,KAAK,MAAMjB,IAE5BC,GACC,qBAAGY,UDhCK,iCCiCN,wBAAMA,UAAU,cAAhB,YACCZ,GAGJO,EAAUU,OAAS,EAClB,uBAAKL,UDnCY,0CCoCf,2BACGL,EAAUW,KAAI,SAACjB,EAAOkB,GAAR,OACb,wBAAMC,IAAKD,EAAOP,UAAWS,GAA7B,IACIpB,EAAMqB,YAId,uBAAKV,UAAU,YACZH,EAASS,KAAI,SAAChB,EAAMiB,GAAP,OACZ,wBAAMC,IAAKD,EAAOP,UAAU,cACzBV,EAAKoB,aAMdrB,GACE,qBAAGW,UDtDW,yCCuDZ,wBAAMA,UAAWS,GAAjB,IAAiCd,EAAU,IAAW,IACtD,wBAAMK,UAAU,uBAAhB,OAA2CH,EAAS,U,oGCSrD,SAASc,EAAT,GAA0B,IACjCC,EADgC,EAARC,KACXC,YAAYC,MAC/B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAUC,SAAUJ,EAAO3B,SAAS,a,uFCrE3B,SAASgC,EAAT,GAA2C,IAAvBD,EAAsB,EAAtBA,SAAU/B,EAAY,EAAZA,SACvCiC,EAAY,GAMhB,OAJEA,EADEjC,EAASoB,OAAS,EACRpB,EAASc,cAAcH,MAAM,KAAKuB,KAAK,KAEvClC,EAASc,cAGrB,uBAAKC,UAAU,aACb,0BAAQA,UAAS,eAAiBkB,EAAUnB,cAA3B,gBACf,0BAAKd,GACL,uBAAKe,UAAU,eACb,gBAAC,KAAD,CAAMF,GAAG,KAAT,QACA,wBAAME,UAAU,cAAhB,KACCf,IAGL,uBAAKe,UAAU,QACZgB,EAASV,KAAI,SAAAc,GAAO,OACnB,gBAAC,IAAD,CACEZ,IAAKY,EAAQC,GACbpC,SAAUmC,EAAQnC,SAClBC,KAAMkC,EAAQlC,KACdC,QAASiC,EAAQE,SACjBlC,OAAQgC,EAAQhC,OAChBC,MAAO+B,EAAQ/B,MACfC,KAAM8B,EAAQ9B,KACdC,MAAO6B,EAAQ7B,MACfC,KAAM4B,EAAQ5B,WAIpB,uBAAKQ,UAAS,sBAAwBkB,EAAxB,gBACZ,sBAAIlB,UAAU,MAAd,yCACyCf,EADzC,4BAIA,qBAAGe,UAAU,YAAb,YACY,IACV,wBAAMA,UAAU,WAAhB","sources":["webpack://gatsby-starter-hello-world/./src/styles/product.module.css","webpack://gatsby-starter-hello-world/./src/components/Product.js","webpack://gatsby-starter-hello-world/./src/pages/honey.js","webpack://gatsby-starter-hello-world/./src/templates/Products.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var link = \"product-module--link--WtayY\";\nexport var names = \"product-module--names--0VkdC\";\nexport var origin = \"product-module--origin--BUGwn\";\nexport var price = \"product-module--price--+8HMB\";\nexport var priceContainer = \"product-module--priceContainer--tDYgT\";\nexport var pricesContainer = \"product-module--pricesContainer--NT6s7\";\nexport var product = \"product-module--product--FrlMn\";\nexport var productDetails = \"product-module--productDetails--A-qw4\";\nexport var thumbnail = \"product-module--thumbnail--MZdGw\";","import { graphql, Link } from \"gatsby\"\nimport React from \"react\"\nimport { getImage, GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\nimport * as styles from \"../styles/product.module.css\"\n\nconst product = {\n  category: \"saffron\",\n  name: \"Saffron Loose\",\n  origin: \"Afghanistan\",\n  price: 200,\n  unit: \"gram\",\n  thumb: \"\",\n  image: \"\",\n}\n\nexport default function Product(props) {\n  const { category, name, altName, origin, price, unit, thumb, slug } = props\n  const thumbImage = getImage(thumb)\n  const priceList = price.split(\",\")\n  const unitList = unit.split(\",\")\n\n  return (\n    <Link to={`/${category.toLowerCase()}/${slug}`} className={styles.link}>\n      <div className={styles.product}>\n        <div className={styles.thumbnail}>\n          {/* <img src={thumb} /> */}\n          <GatsbyImage image={thumbImage} alt={name} />\n        </div>\n        <div className={styles.productDetails}>\n          <p className=\"color-gray\">{category}</p>\n          <div className={styles.names}>\n            <h2>{name}</h2>\n            {altName && <h2 lang=\"fa\">{altName}</h2>}\n          </div>\n          {origin && (\n            <p className={styles.origin}>\n              <span className=\"color-gray\">Origin: </span>\n              {origin}\n            </p>\n          )}\n          {priceList.length > 1 ? (\n            <div className={styles.pricesContainer}>\n              <div>\n                {priceList.map((price, index) => (\n                  <span key={index} className={styles.price}>\n                    ${price.trim()}\n                  </span>\n                ))}\n              </div>\n              <div className=\"mt-small\">\n                {unitList.map((unit, index) => (\n                  <span key={index} className=\"color-gray\">\n                    {unit.trim()}\n                  </span>\n                ))}\n              </div>\n            </div>\n          ) : (\n            price && (\n              <p className={styles.priceContainer}>\n                <span className={styles.price}>${priceList[0]}</span>{\" \"}\n                <span className=\"color-gray ml-small\">per {unitList[0]}</span>\n              </p>\n            )\n          )}\n        </div>\n      </div>\n    </Link>\n  )\n}\n\n// export const query = graphql`\n//   query thumbnail {\n//     childImageSharp {\n//       gatsbyImageData\n//     }\n//   }\n// `\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\n\nimport Layout from \"../components/Layout\"\nimport Products from \"../templates/Products\"\nconst saffron = [\n  {\n    category: \"saffron\",\n    name: \"Saffron Loose\",\n    origin: \"Afghanistan\",\n    price: 200,\n    unit: \"gram\",\n    thumb: \"/icons/saffron.png\",\n    image: \"\",\n  },\n  {\n    category: \"saffron\",\n    name: \"Saffron Loose\",\n    origin: \"Afghanistan\",\n    price: 200,\n    unit: \"gram\",\n    thumb: \"/icons/saffron.png\",\n    image: \"\",\n  },\n  {\n    category: \"saffron\",\n    name: \"Saffron Loose\",\n    origin: \"Afghanistan\",\n    price: 200,\n    unit: \"gram\",\n    thumb: \"/icons/saffron.png\",\n    image: \"\",\n  },\n  {\n    category: \"saffron\",\n    name: \"Saffron Loose\",\n    origin: \"Afghanistan\",\n    price: 200,\n    unit: \"gram\",\n    thumb: \"/icons/saffron.png\",\n    image: \"\",\n  },\n  {\n    category: \"saffron\",\n    name: \"Saffron Loose\",\n    origin: \"Afghanistan\",\n    price: 200,\n    unit: \"gram\",\n    thumb: \"/icons/saffron.png\",\n    image: \"\",\n  },\n  {\n    category: \"saffron\",\n    name: \"Saffron Loose\",\n    origin: \"Afghanistan\",\n    price: 200,\n    unit: \"gram\",\n    thumb: \"/icons/saffron.png\",\n    image: \"\",\n  },\n  {\n    category: \"saffron\",\n    name: \"Saffron Loose\",\n    origin: \"Afghanistan\",\n    price: 200,\n    unit: \"gram\",\n    thumb: \"/icons/saffron.png\",\n    image: \"\",\n  },\n]\nexport default function Honey({ data }) {\n  const honey = data.allDataJson.nodes\n  return (\n    <Layout>\n      <Products products={honey} category=\"Honey\" />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query Honey {\n    allDataJson(filter: { category: { eq: \"Honey\" } }) {\n      nodes {\n        category\n        id\n        name\n        origin\n        price\n        slug\n        unit\n        thumb {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Product from \"../components/Product\"\n\nexport default function Products({ products, category }) {\n  let pageClass = \"\"\n  if (category.length > 1) {\n    pageClass = category.toLowerCase().split(\" \").join(\"-\")\n  } else {\n    pageClass = category.toLowerCase()\n  }\n  return (\n    <div className=\"container\">\n      <header className={`page-header ${pageClass.toLowerCase()}-page-header`}>\n        <h1>{category}</h1>\n        <div className=\"bread-crumb\">\n          <Link to=\"/\">Home</Link>\n          <span className=\"color-gray\">&gt;</span>\n          {category}\n        </div>\n      </header>\n      <div className=\"grid\">\n        {products.map(product => (\n          <Product\n            key={product.id}\n            category={product.category}\n            name={product.name}\n            altName={product.alt_name}\n            origin={product.origin}\n            price={product.price}\n            unit={product.unit}\n            thumb={product.thumb}\n            slug={product.slug}\n          />\n        ))}\n      </div>\n      <div className={`banner-page-bottom ${pageClass}-page-banner`}>\n        <h2 className=\"h2\">\n          We invite you to explore our range of {category} in person at our\n          store.\n        </h2>\n        <p className=\"subtitle\">\n          We are at{\" \"}\n          <span className=\"address\">\n            Auburn Arcade, 12/75-77 Auburn Rd, Auburn NSW 2144\n          </span>\n        </p>\n      </div>\n    </div>\n  )\n}\n"],"names":["Product","props","category","name","altName","origin","price","unit","thumb","slug","thumbImage","getImage","priceList","split","unitList","to","toLowerCase","className","G","image","alt","lang","length","map","index","key","styles","trim","Honey","honey","data","allDataJson","nodes","products","Products","pageClass","join","product","id","alt_name"],"sourceRoot":""}